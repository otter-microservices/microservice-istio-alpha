version: '1.0'
steps:

  SetVars:
    description: Freestyle step..
    title: Free styling
    environment:
      - GOOGLE_PROJECT=otters-cc
      - TLD=otterly.cc
    image: alpine:latest
    commands:
      - env
      - cf_export GOOGLE_PROJECT
      - cf_export TLD
      - cf_export BUILD_IMAGE="gcr.io/$GOOGLE_PROJECT/${{CF_REPO_NAME}}:${{CF_SHORT_REVISION}}"
      - cf_export HOST="${{CF_BRANCH_TAG_NORMALIZED}}.${{CF_REPO_NAME}}.$TLD"
      - cf_export NAMESPACE="${{CF_BRANCH_TAG_NORMALIZED}}-${{CF_REPO_NAME}}"
  SeeThemVars:
    description: Freestyle step..
    title: Free stylin them var
    image: alpine:latest
    commands:
      - env

#  NotifyGitHubPREnvCreating:
#    title: Set Pull Request Environment pending
#    image: cloudposse/github-status-updater
#    environment:
#      - GITHUB_ACTION=update_state
#      - GITHUB_TOKEN=${{GITHUB_TOKEN}}
#      - GITHUB_OWNER=${{CF_REPO_OWNER}}
#      - GITHUB_REPO=${{CF_REPO_NAME}}
#      - GITHUB_REF=${{CF_REVISION}}
#      - GITHUB_CONTEXT=Pull Request Environment
#      - GITHUB_STATE=success
#      - GITHUB_DESCRIPTION=Creating Pull Request Environment
#      - GITHUB_TARGET_URL=http://${{HOST}}

#  NotifySlackChannelPR:
#    title: Sending Slack Notification for Pull Request Environment
#    image: cloudposse/slack-notifier
#    environment:
#      - SLACK_WEBHOOK_URL=https://hooks.slack.com/services/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
#      - SLACK_USER_NAME=Codefresh
#      - SLACK_ICON_EMOJI=":poop:"
#      - SLACK_TITLE=Pull Request Environment Deployed for ${{CF_BRANCH}}
#      - SLACK_TITLE_LINK=https://g.codefresh.io/helm/releases/sales-demo@FirstKubernetes/kube-system/${{CF_BRANCH_TAG_NORMALIZED}}-${{CF_PULL_REQUEST_NUMBER}}-${{CF_REPO_NAME}}/services
#      - SLACK_FOOTER_ICON=https://pbs.twimg.com/profile_images/859843681553178624/AHcBc6EG_400x400.jpg
#      - SLACK_THUMB_URL=https://pbs.twimg.com/profile_images/699752011428810753/ayRqrKW1_400x400.png
#      - SLACK_FOOTER=Helm Deploy of example-voting-app
#      - SLACK_AUTHOR_NAME=${{CF_BUILD_ID}}
#      - SLACK_AUTHOR_LINK=${{CF_BUILD_URL}}
#      - SLACK_AUTHOR_ICON=https://github.com/${{CF_BUILD_INITIATOR}}.png
#      - SLACK_FIELD1_TITLE=Environment
#      - SLACK_FIELD1_VALUE=Pull Request
#      - SLACK_FIELD1_SHORT=true
#      - SLACK_FIELD2_TITLE=Version
#      - SLACK_FIELD2_VALUE=${{CF_BRANCH_TAG_NORMALIZED}}-${{CF_SHORT_REVISION}}
#      - SLACK_FIELD2_SHORT=true

  BuildingDockerImage:
    title: Building Docker Image
    type: build
    image_name: '${{CF_REPO_NAME}}'
    working_directory: ./
    tag: '${{CF_SHORT_REVISION}}'
    dockerfile: Dockerfile
    
  PushToGCR:
    type: push
    title: Pushing Docker image to GCR
    candidate: '${{BuildingDockerImage}}'
    tag: '${{CF_SHORT_REVISION}}'
    image_name: '${{CF_REPO_NAME}}'
    registry: gcr-io
    fail_fast: false

  RunningNamespaceScript:
    title: Running Namespace
    type: deploy
    kind: kubernetes
    cluster: standard-cluster-1@otters-cc
    namespace: ${{NAMESPACE}}
    file_path: ./k8s/namespace.yaml

  RunningConfigmapScript:
    title: Running Configmap
    type: deploy
    kind: kubernetes
    cluster: standard-cluster-1@otters-cc
    namespace: ${{NAMESPACE}}
    file_path: ./k8s/configmap.yaml

  RunningDeployScript:
    title: Running Deployment
    type: deploy
    kind: kubernetes
    cluster: standard-cluster-1@otters-cc
    namespace: ${{NAMESPACE}}
    file_path: ./k8s/deployment.yaml

#  RunningServiceScript:
#    title: Running Service
#    type: deploy
#    kind: kubernetes
#    cluster: standard-cluster-1@otters-cc
#    namespace: ${{NAMESPACE}}
#    file_path: ./k8s/service.yaml
          
  RunningIngressScript:
    title: Running Ingress
    type: deploy
    kind: kubernetes
    cluster: standard-cluster-1@otters-cc
    namespace: ${{NAMESPACE}}
    file_path: ./k8s/ingress.yaml
